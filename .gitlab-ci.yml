default:
  image: docker:24.0

stages:
  - pre_checks
  - build
  - deploy

variables:
  FRONT_IMAGE_TAG: $CI_REGISTRY_IMAGE/sadh-front:$CI_COMMIT_SHORT_SHA-$DEPLOY_ENV
  BACK_IMAGE_TAG: $CI_REGISTRY_IMAGE/sadh-back:$CI_COMMIT_SHORT_SHA-$DEPLOY_ENV

linting:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: pre_checks
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --version
    - black --check --verbose --diff --color -- .

# From https://docs.gitlab.com/ee/ci/docker/using_kaniko.html#building-a-docker-image-with-kaniko
buildfrontend:
  stage: build
  rules:
    - changes:
        - front/**/*
      if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DEPLOY_ENV: "prod"
    - changes:
        - front/**/*
      variables:
        DEPLOY_ENV: "dev"
    - when: never # Do not run if not needed (no changes in back)
  image:
    name: gcr.io/kaniko-project/executor:v1.23.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/front"
      --dockerfile "${CI_PROJECT_DIR}/front/Dockerfile"
      --destination "${FRONT_IMAGE_TAG}"
      --build-arg mode=${DEPLOY_ENV}

# From https://docs.gitlab.com/ee/ci/docker/using_kaniko.html#building-a-docker-image-with-kaniko
buildbackend:
  stage: build
  rules:
    - changes:
        - back/**/*
      if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DEPLOY_ENV: "prod"
    - changes:
        - back/**/*
      variables:
        DEPLOY_ENV: "dev"
    - when: never # Do not run if not needed (no changes in back)
  image:
    name: gcr.io/kaniko-project/executor:v1.23.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/back"
      --dockerfile "${CI_PROJECT_DIR}/back/Dockerfile"
      --destination "${BACK_IMAGE_TAG}"

deploybackend:
  stage: deploy
  rules:
    - changes:
        - back/**/*
      if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DEPLOY_ENV: "prod"
        DEPLOY_NAMESPACE: "default"
    - changes:
        - back/**/*
      variables:
        DEPLOY_ENV: "dev"
        DEPLOY_NAMESPACE: "dev"
    - when: never
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    # Substitute environment variables in Kubernetes manifests
    - mkdir back/k8s-envsubst
    - |
      for file in back/k8s/*.yaml; do
        envsubst < $file | tee back/k8s-envsubst/$(basename $file)
      done
    # Apply Kubernetes manifests
    - kubectl config use-context fai/k8s-cluster:main-k8s-agent
    - kubectl apply -f back/k8s-envsubst/
    # Clean up
    - rm -rf back/k8s-envsubst

deployfrontend:
  stage: deploy
  rules:
    - changes:
        - front/**/*
      if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DEPLOY_ENV: "prod"
        DEPLOY_NAMESPACE: "default"
    - changes:
        - front/**/*
      variables:
        DEPLOY_ENV: "dev"
        DEPLOY_NAMESPACE: "dev"
    - when: never
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    # Substitute environment variables in Kubernetes manifests
    - mkdir front/k8s-envsubst
    - |
      for file in front/k8s/*.yaml; do
        envsubst < $file | tee front/k8s-envsubst/$(basename $file)
      done
    # Apply Kubernetes manifests
    - kubectl config use-context fai/k8s-cluster:main-k8s-agent
    - kubectl apply -f front/k8s-envsubst/
    # Clean up
    - rm -rf front/k8s-envsubst